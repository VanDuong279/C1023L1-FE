{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n// URL của API backend\nconst API_URL = \"http://localhost:8080/api\";\n\n// Hàm gọi API để lấy danh sách người dùng\nexport const getUsers = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/users`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    throw error;\n  }\n};\n// Hàm gọi API để thêm mới nhân viên\nexport const saveEmployee = async (values, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/users`, values, {\n      headers: {\n        Authorization: `Bearer ${token}` // Đính kèm token vào header\n      }\n    });\n    if (response.status === 201) {\n      toast.success(\"Thêm mới nhân viên thành công!\");\n      return response.data;\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Error adding employee:\", error);\n    toast.error(\"Lỗi khi thêm mới nhân viên: \" + ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","toast","API_URL","getUsers","token","response","get","headers","Authorization","data","error","console","saveEmployee","values","post","status","success","_error$response","_error$response$data","message"],"sources":["E:/Codegym/C0823I1/Manager_cf/C1023L1-FE/project-c1023l1/src/Service/UserService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// URL của API backend\r\nconst API_URL = \"http://localhost:8080/api\";\r\n\r\n// Hàm gọi API để lấy danh sách người dùng\r\nexport const getUsers = async (token) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/users`, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n        throw error;\r\n    }\r\n};\r\n// Hàm gọi API để thêm mới nhân viên\r\nexport const saveEmployee = async (values, token) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/users`, values, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,  // Đính kèm token vào header\r\n            },\r\n        });\r\n\r\n        if (response.status === 201) {\r\n            toast.success(\"Thêm mới nhân viên thành công!\");\r\n            return response.data;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error adding employee:\", error);\r\n        toast.error(\"Lỗi khi thêm mới nhân viên: \" + error.response?.data?.message || error.message);\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,KAAK,IAAK;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,OAAO,QAAQ,EAAE;MACjDK,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUJ,KAAK;MAClC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAET,KAAK,KAAK;EACjD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAAC,GAAGZ,OAAO,QAAQ,EAAEW,MAAM,EAAE;MAC1DN,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUJ,KAAK,EAAE,CAAG;MACvC;IACJ,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;MACzBd,KAAK,CAACe,OAAO,CAAC,gCAAgC,CAAC;MAC/C,OAAOX,QAAQ,CAACI,IAAI;IACxB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAO,eAAA,EAAAC,oBAAA;IACZP,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9CT,KAAK,CAACS,KAAK,CAAC,8BAA8B,KAAAO,eAAA,GAAGP,KAAK,CAACL,QAAQ,cAAAY,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAIT,KAAK,CAACS,OAAO,CAAC;IAC5F,MAAMT,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}